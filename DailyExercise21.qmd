---
title: "DailyExercise21"
output-dir: docs
type: website
format:
  html:
    self-contained: true
---

First, I downloaded the appropriate files using the code from lecture.

```{r}
library(dataRetrieval)
library(dplyr)
library(lubridate)
library(tsibble)

# Example: Cache la Poudre River at Mouth (USGS site 06752260)
poudre_flow <- readNWISdv(siteNumber = "06752260",    # Download data from USGS for site 06752260
                          parameterCd = "00060",      # Parameter code 00060 = discharge in cfs)
                          startDate = "2013-01-01",   # Set the start date
                          endDate = "2023-12-31") |>  # Set the end date
  renameNWISColumns() |>                              # Rename columns to standard names (e.g., "Flow", "Date")
  mutate(Date = yearmonth(Date)) |>                   # Convert daily Date values into a year-month format (e.g., "2023 Jan")
  group_by(Date) |>                                   # Group the data by the new monthly Date
  summarise(Flow = mean(Flow))                       # Calculate the average daily flow for each month
```

1.  Convert to tsibble

    ```{r}
    library(tsibble)

    # Convert the data to a tsibble object
    poudre_flow_tsibble <- as_tsibble(poudre_flow, index = Date)

    ```
I used the code above to convert the data.frame into a tsibble object

2.  Plotting the time series

    ```{r}
    library(ggplot2)
    library(plotly)

    # Plot the time series using ggplot
    poudre_flow_plot <- ggplot(poudre_flow_tsibble, aes(x = Date, y = Flow)) +
      geom_line() +
      labs(title = "Monthly Average Streamflow", 
           x = "Date", y = "Flow") +
      theme_minimal()

    # Animate the plot with plotly
    poudre_flow_plotly <- ggplotly(poudre_flow_plot)
    poudre_flow_plotly

    ```
I used the code above to plot the time series data and animate this plot with plotly

3.  subseries

    ```{r}
    library(feasts)

    # Visualize seasonal subseries
    gg_subseries(poudre_flow_tsibble, Flow) +
      labs(title = "Subseries Plot for Cache la Poudre River Streamflow")

    ```
I used the code above to visualize the seasonal patterns in the data. In this plot, "seasons" are defined by cycles in the data and "subseries" represent how the data behaves in each year

4.Decompose
```{r}
library(fable)

# Decompose the time series using STL
decomposition <- poudre_flow_tsibble %>%
  model(stl = STL(Flow ~ trend(window = 13) + season(window = 13)))

# Plot the decomposition
components <- components(decomposition)
autoplot(components)

```

I used the code above to decompose the time series data into its components: trend, seasonality, and residuals. In this plot, I see 4 different graphs labeled "Flow", "trend", "season_year", and "remander". Looking at this graph, the "flow" component is lowest in 2018 and 2020 but increases in subsequent years. Thee "trend" component mimics this pattern. The "season_year" component stays consistant and the "remander" component follows no obvious pattern. I think the "trend" component represents the change in flow over time and the seasonal components represent the time of the year.